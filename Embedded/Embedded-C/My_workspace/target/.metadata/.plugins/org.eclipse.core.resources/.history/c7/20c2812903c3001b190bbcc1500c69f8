/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	const uint32_t* baseAddressOfRccRegisters = (uint32_t*)0x40023800;
	const uint32_t* baseAddressOfPA0 = (uint32_t*)0x40020000;
	const uint32_t* baseAddressOfPD12 = (uint32_t*)0x40020C00;

	// IO port clock enable
	// First set the address to RCC AHB1 peripheral clock register
	uint32_t* AHB1Address = 0x40023800 + 0x30;
	*AHB1Address |= 1;
	*AHB1Address |= (3 << 1_;

	// Set bit 0 and 3 to 1

	// Set the mode of PA0 to input (to be able to read the voltage)
	uint32_t* modeRegister = baseAddressOfPA0;
	*modeRegister &= ~3;


    /* Loop forever */
	for(;;);
}
